import { motion } from 'framer-motion';
import { useState, useEffect } from 'react';
import '../styles/achievements.css';
import { CosmicSpinner } from '../components/ui';
import { Footer } from '../components/layout';
import { achievementsData } from '../data';

function AchievementsPage() {
  const [isLoading, setIsLoading] = useState(true);
  const [hoveredAchievement, setHoveredAchievement] = useState<number | null>(null);

  useEffect(() => {
    const timer = setTimeout(() => setIsLoading(false), 1500);
    return () => clearTimeout(timer);
  }, []);

  if (isLoading) {
    return <CosmicSpinner />;
  }

  return (
    <div className="app-container">
      <div className="space-elements">
        <div className="comet" />
        <img src="/neptune.svg" alt="Neptune" className="planet planet-neptune" />
        <img src="/planet.svg" alt="Planet 1" className="planet planet-1" />
        <img src="/planet.svg" alt="Planet 2" className="planet planet-2" />
        <img src="/planet.svg" alt="Planet 3" className="planet planet-3" />

        {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–æ—Å–º–∏—á–µ—Å–∫–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã */}
        <div className="cosmic-orb cosmic-orb-1" />
        <div className="cosmic-orb cosmic-orb-2" />
        <div className="cosmic-orb cosmic-orb-3" />

        {/* –ó–≤–µ–∑–¥—ã */}
        {[...Array(40)].map((_, i) => (
          <div
            key={`star-${i}`}
            className={`star star-${['small', 'medium', 'large'][Math.floor(Math.random() * 3)]}`}
            style={{
              top: `${Math.random() * 100}%`,
              left: `${Math.random() * 100}%`,
              ['--duration' as string]: `${2 + Math.random() * 3}s`,
            }}
          />
        ))}

        {/* –¢—É–º–∞–Ω–Ω–æ—Å—Ç–∏ */}
        <div className="nebula nebula-1" />
        <div className="nebula nebula-2" />
        <div className="nebula nebula-3" />
      </div>

      <div className="content">
        <motion.div
          className="page-header"
          initial={{ opacity: 0, y: -50 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.8 }}>
          <motion.div
            className="cosmic-particles"
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
            transition={{ delay: 0.5 }}>
            {[...Array(8)].map((_, i) => (
              <div
                key={i}
                className="particle"
                style={
                  {
                    '--delay': `${i * 0.2}s`,
                    '--duration': `${2 + Math.random() * 2}s`,
                  } as React.CSSProperties
                }
              />
            ))}
          </motion.div>

          <h1 className="page-title">
            <span className="gradient-text">–î–æ—Å—Ç–∏–∂–µ–Ω–∏—è</span>
          </h1>
          <p className="page-subtitle">–ü—É—Ç—å Pesherkino VPN —á–µ—Ä–µ–∑ –∫–æ—Å–º–æ—Å —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π</p>

          <motion.div
            className="achievement-counter"
            initial={{ opacity: 0, scale: 0 }}
            animate={{ opacity: 1, scale: 1 }}
            transition={{ delay: 1, duration: 0.5 }}>
            <span className="counter-number">{achievementsData.length}</span>
            <span className="counter-label">–¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π</span>
          </motion.div>
        </motion.div>

        <div className="scroll-content">
          <motion.div
            className="stats-overview"
            initial={{ opacity: 0, scale: 0.9 }}
            animate={{ opacity: 1, scale: 1 }}
            transition={{ duration: 0.6, delay: 0.2 }}>
            <div className="stats-grid">
              <motion.div
                className="stat-card"
                whileHover={{
                  scale: 1.05,
                  rotateY: 5,
                  transition: { duration: 0.3 },
                }}
                whileTap={{ scale: 0.95 }}>
                <div className="stat-number">80+</div>
                <div className="stat-label">–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</div>
                <div className="stat-glow" />
              </motion.div>
              <motion.div
                className="stat-card"
                whileHover={{
                  scale: 1.05,
                  rotateY: -5,
                  transition: { duration: 0.3 },
                }}
                whileTap={{ scale: 0.95 }}>
                <div className="stat-number">4</div>
                <div className="stat-label">–õ–æ–∫–∞—Ü–∏–∏</div>
                <div className="stat-glow" />
              </motion.div>
              <motion.div
                className="stat-card"
                whileHover={{
                  scale: 1.05,
                  rotateY: 5,
                  transition: { duration: 0.3 },
                }}
                whileTap={{ scale: 0.95 }}>
                <div className="stat-number">99.9%</div>
                <div className="stat-label">–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã</div>
                <div className="stat-glow" />
              </motion.div>
              <motion.div
                className="stat-card"
                whileHover={{
                  scale: 1.05,
                  rotateY: -5,
                  transition: { duration: 0.3 },
                }}
                whileTap={{ scale: 0.95 }}>
                <div className="stat-number">24/7</div>
                <div className="stat-label">–ü–æ–¥–¥–µ—Ä–∂–∫–∞</div>
                <div className="stat-glow" />
              </motion.div>
            </div>
          </motion.div>

          <motion.div
            className="timeline-section"
            initial={{ opacity: 0, y: 50 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8, delay: 0.4 }}>
            <h2 className="section-title">–ù–∞—à–∞ –∏—Å—Ç–æ—Ä–∏—è</h2>
            <div className="timeline">
              {achievementsData.map((achievement, index) => (
                <motion.div
                  key={achievement.year}
                  className={`timeline-item ${index % 2 === 0 ? 'left' : 'right'}`}
                  initial={{ opacity: 0, x: index % 2 === 0 ? -100 : 100 }}
                  animate={{ opacity: 1, x: 0 }}
                  transition={{ duration: 0.6, delay: 0.6 + index * 0.2 }}
                  whileHover={{
                    scale: 1.02,
                    transition: { duration: 0.2 },
                  }}
                  onHoverStart={() => setHoveredAchievement(achievement.year)}
                  onHoverEnd={() => setHoveredAchievement(null)}>
                  <div className="timeline-content">
                    <motion.div
                      className="timeline-year"
                      animate={
                        hoveredAchievement === achievement.year ? { scale: 1.1 } : { scale: 1 }
                      }
                      transition={{ duration: 0.2 }}>
                      {achievement.year}
                    </motion.div>
                    <h3 className="timeline-title">{achievement.title}</h3>
                    <p className="timeline-description">{achievement.description}</p>
                    {achievement.metrics && (
                      <div className="timeline-metrics">
                        {achievement.metrics.map((metric, metricIndex) => (
                          <motion.div
                            key={metricIndex}
                            className="metric"
                            whileHover={{ scale: 1.05 }}
                            whileTap={{ scale: 0.95 }}>
                            <span className="metric-value">{metric.value}</span>
                            <span className="metric-label">{metric.label}</span>
                          </motion.div>
                        ))}
                      </div>
                    )}
                    {achievement.icon && (
                      <motion.div
                        className="timeline-icon"
                        animate={
                          hoveredAchievement === achievement.year ? { rotate: 360 } : { rotate: 0 }
                        }
                        transition={{ duration: 0.5 }}>
                        <img src={achievement.icon} alt={achievement.title} />
                      </motion.div>
                    )}
                  </div>
                </motion.div>
              ))}
            </div>
          </motion.div>

          <motion.div
            className="milestones-section"
            initial={{ opacity: 0, y: 50 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8, delay: 0.8 }}>
            <h2 className="section-title">–ö–ª—é—á–µ–≤—ã–µ –≤–µ—Ö–∏</h2>
            <div className="milestones-grid">
              {achievementsData
                .filter((achievement) => achievement.isMilestone)
                .map((milestone, index) => (
                  <motion.div
                    key={milestone.year}
                    className="milestone-card"
                    initial={{ opacity: 0, scale: 0.8 }}
                    animate={{ opacity: 1, scale: 1 }}
                    transition={{ duration: 0.5, delay: 1 + index * 0.1 }}
                    whileHover={{
                      scale: 1.05,
                      y: -5,
                      transition: { duration: 0.3 },
                    }}
                    whileTap={{ scale: 0.95 }}>
                    <div className="milestone-year">{milestone.year}</div>
                    <h3 className="milestone-title">{milestone.title}</h3>
                    <p className="milestone-description">{milestone.description}</p>
                    <motion.div
                      className="milestone-badge"
                      animate={{ rotate: [0, 10, -10, 0] }}
                      transition={{ duration: 2, repeat: Infinity, repeatDelay: 3 }}>
                      <span>üèÜ</span>
                    </motion.div>
                  </motion.div>
                ))}
            </div>
          </motion.div>

          <motion.div
            className="future-section"
            initial={{ opacity: 0, y: 50 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8, delay: 1.2 }}>
            <h2 className="section-title">–ü–ª–∞–Ω—ã –Ω–∞ –±—É–¥—É—â–µ–µ</h2>
            <div className="future-grid">
              <motion.div
                className="future-card"
                whileHover={{
                  scale: 1.03,
                  y: -8,
                  transition: { duration: 0.3 },
                }}
                whileTap={{ scale: 0.98 }}>
                <motion.div
                  className="future-icon"
                  animate={{ y: [0, -5, 0] }}
                  transition={{ duration: 2, repeat: Infinity }}>
                  üöÄ
                </motion.div>
                <h3>–ì–ª–æ–±–∞–ª—å–Ω–æ–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ</h3>
                <p>–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö –ª–æ–∫–∞—Ü–∏–π –ø–æ –≤—Å–µ–º—É –º–∏—Ä—É</p>
              </motion.div>
              <motion.div
                className="future-card"
                whileHover={{
                  scale: 1.03,
                  y: -8,
                  transition: { duration: 0.3 },
                }}
                whileTap={{ scale: 0.98 }}>
                <motion.div
                  className="future-icon"
                  animate={{ y: [0, -5, 0] }}
                  transition={{ duration: 2, repeat: Infinity, delay: 0.5 }}>
                  üîí
                </motion.div>
                <h3>–£–ª—É—á—à–µ–Ω–Ω–∞—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å</h3>
                <p>–ù–æ–≤—ã–µ –ø—Ä–æ—Ç–æ–∫–æ–ª—ã —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è –∏ –∑–∞—â–∏—Ç—ã</p>
              </motion.div>
              <motion.div
                className="future-card"
                whileHover={{
                  scale: 1.03,
                  y: -8,
                  transition: { duration: 0.3 },
                }}
                whileTap={{ scale: 0.98 }}>
                <motion.div
                  className="future-icon"
                  animate={{ y: [0, -5, 0] }}
                  transition={{ duration: 2, repeat: Infinity, delay: 1 }}>
                  üì±
                </motion.div>
                <h3>–ú–æ–±–∏–ª—å–Ω—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è</h3>
                <p>–ù–∞—Ç–∏–≤–Ω—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–ª—è –≤—Å–µ—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º</p>
              </motion.div>
              <motion.div
                className="future-card"
                whileHover={{
                  scale: 1.03,
                  y: -8,
                  transition: { duration: 0.3 },
                }}
                whileTap={{ scale: 0.98 }}>
                <motion.div
                  className="future-icon"
                  animate={{ y: [0, -5, 0] }}
                  transition={{ duration: 2, repeat: Infinity, delay: 1.5 }}>
                  ü§ñ
                </motion.div>
                <h3>AI-—Ñ—É–Ω–∫—Ü–∏–∏</h3>
                <p>–£–º–Ω—ã–π –≤—ã–±–æ—Ä —Å–µ—Ä–≤–µ—Ä–æ–≤ –∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è</p>
              </motion.div>
            </div>
          </motion.div>
        </div>

        {/* –ö–æ—Å–º–∏—á–µ—Å–∫–∞—è —Ü–∏—Ç–∞—Ç–∞ */}
        <motion.div
          className="cosmic-quote-block"
          initial={{ opacity: 0, y: 40 }}
          whileInView={{ opacity: 1, y: 0 }}
          viewport={{ once: true }}
          transition={{ duration: 1, delay: 0.2 }}>
          <div className="cosmic-quote-decor">
            <span className="cosmic-quote-rocket" role="img" aria-label="–†–∞–∫–µ—Ç–∞">
              üöÄ
            </span>
            <span className="cosmic-quote-star star1">‚ú¶</span>
            <span className="cosmic-quote-star star2">‚úß</span>
            <span className="cosmic-quote-star star3">‚ú¶</span>
          </div>
          <blockquote className="cosmic-quote">
            <span className="cosmic-quote-mark">‚Äú</span>
            –ú—ã —Ä–∞–∑–≤–∏–≤–∞–µ–º—Å—è –¥–ª—è –≤–∞—Å ‚Äî –∏–∑—É—á–∞–µ–º –ø–µ—Ä–µ–¥–æ–≤—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏, –ø—Ä–æ–∫–ª–∞–¥—ã–≤–∞–µ–º –ø—É—Ç—å –≤ —Ü–∏—Ñ—Ä–æ–≤–æ–π
            –∫–æ—Å–º–æ—Å, —á—Ç–æ–±—ã –≤—ã –≤—Å–µ–≥–¥–∞ –æ—Å—Ç–∞–≤–∞–ª–∏—Å—å –Ω–∞ —Å–≤—è–∑–∏, –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∏ –≤ –ª—é–±–∏–º—ã—Ö –∏–≥—Ä–∞—Ö. –í–º–µ—Å—Ç–µ —Å
            –≤–∞—à–µ–π –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –º—ã ‚Äî –≤–∞—à–∞ —Ä–∞–∫–µ—Ç–∞ –≤ –º–∏—Ä —Å–≤–æ–±–æ–¥—ã, –∑–∞—â–∏—Ç—ã –∏ –±–µ–∑–≥—Ä–∞–Ω–∏—á–Ω—ã—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π
            –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞.
            <span className="cosmic-quote-mark">‚Äù</span>
          </blockquote>
        </motion.div>
        <Footer />
      </div>
    </div>
  );
}

export default AchievementsPage;
