import { motion, AnimatePresence } from 'framer-motion';
import { useState, useEffect, useRef } from 'react';
import { useNavigate } from 'react-router-dom';
import './App.css';

interface WikiSection {
  id: string;
  title: string;
  content: string;
  subsections?: WikiSection[];
}

interface SearchResult {
  sectionId: string;
  sectionTitle: string;
  subsectionId?: string;
  subsectionTitle?: string;
  matchedText: string;
  context: string;
  type: 'section' | 'subsection' | 'content';
}

const wikiData: WikiSection[] = [
  {
    id: 'install',
    title: '–£—Å—Ç–∞–Ω–æ–≤–∫–∞',
    content: `<h2>–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Pesherkino VPN</h2>
      <p>–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à—É –ø–ª–∞—Ç—Ñ–æ—Ä–º—É –∏ —Å–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏:</p>`,
    subsections: [
      {
        id: 'install-windows',
        title: 'Windows | Hiddify',
        content: `<h3>–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–∞ Windows —á–µ—Ä–µ–∑ Hiddify</h3>
        <ol>
          <li>–°–∫–∞—á–∞–π—Ç–µ <a href="https://hiddify.com/ru/download" target="_blank">Hiddify</a> —Å –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–≥–æ —Å–∞–π—Ç–∞.</li>
          <li>–ò–º–ø–æ—Ä—Ç–∏—Ä—É–π—Ç–µ —Å—Å—ã–ª–∫—É –∏–∑ Telegram-–±–æ—Ç–∞.</li>
          <li>–°–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—é.</li>
        </ol>`,
      },
      {
        id: 'install-macos',
        title: 'MacOS | Hiddify',
        content: `<h3>–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–∞ MacOS —á–µ—Ä–µ–∑ Hiddify</h3>
        <ol>
          <li>–°–∫–∞—á–∞–π—Ç–µ Hiddify –¥–ª—è MacOS.</li>
          <li>–ò–º–ø–æ—Ä—Ç–∏—Ä—É–π—Ç–µ —Å—Å—ã–ª–∫—É –∏–∑ Telegram-–±–æ—Ç–∞.</li>
          <li>–°–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—é.</li>
        </ol>`,
      },
      {
        id: 'install-iphone',
        title: 'Iphone | Streisand',
        content: `<h3>–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–∞ iPhone —á–µ—Ä–µ–∑ Streisand</h3>
        <ol>
          <li>–°–∫–∞—á–∞–π—Ç–µ Streisand –∏–∑ App Store.</li>
          <li>–ò–º–ø–æ—Ä—Ç–∏—Ä—É–π—Ç–µ —Å—Å—ã–ª–∫—É –∏–∑ Telegram-–±–æ—Ç–∞.</li>
          <li>–°–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—é.</li>
        </ol>`,
      },
      {
        id: 'install-android',
        title: 'Android Hiddify',
        content: `<h3>–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–∞ Android —á–µ—Ä–µ–∑ Hiddify</h3>
        <ol>
          <li>–°–∫–∞—á–∞–π—Ç–µ Hiddify –∏–∑ Google Play.</li>
          <li>–ò–º–ø–æ—Ä—Ç–∏—Ä—É–π—Ç–µ —Å—Å—ã–ª–∫—É –∏–∑ Telegram-–±–æ—Ç–∞.</li>
          <li>–°–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—é.</li>
        </ol>`,
      },
    ],
  },
  {
    id: 'advanced-windows',
    title: '–ë–æ–ª–µ–µ —Å–ª–æ–∂–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–∞ Windows',
    content: `<h2>–ë–æ–ª–µ–µ —Å–ª–æ–∂–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–∞ Windows</h2>
      <p>–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –æ—Å–æ–±—ã—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤:</p>`,
    subsections: [
      {
        id: 'advanced-history',
        title: '–ü—Ä–µ–¥—ã—Å—Ç–æ—Ä–∏—è',
        content: `<h3>–ü—Ä–µ–¥—ã—Å—Ç–æ—Ä–∏—è</h3>
        <p>–ü–æ—á–µ–º—É —Å—Ç–æ–∏—Ç –≤—ã–±—Ä–∞—Ç—å –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç—ã –∏ –∫–æ–≥–¥–∞ —ç—Ç–æ –Ω—É–∂–Ω–æ.</p>`,
      },
      {
        id: 'nekoray-windows',
        title: 'Nekoray - Windows',
        content: `<h3>Nekoray - Windows</h3>
        <p>–ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ Nekoray –¥–ª—è Windows.</p>`,
      },
      {
        id: 'nekoray-split',
        title: 'Nekoray - Windows | –†–∞–∑–¥–µ–ª—å–Ω—ã–π —Ç—Ä–∞—Ñ–∏–∫',
        content: `<h3>Nekoray - Windows | –†–∞–∑–¥–µ–ª—å–Ω—ã–π —Ç—Ä–∞—Ñ–∏–∫</h3>
        <p>–ö–∞–∫ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å —Ä–∞–∑–¥–µ–ª—å–Ω—ã–π —Ç—Ä–∞—Ñ–∏–∫ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π.</p>`,
      },
      {
        id: 'nekoray-browser-discord',
        title: 'Nekoray - Windows | —Ç–æ–ª—å–∫–æ –±—Ä–∞—É–∑–µ—Ä –∏ discord',
        content: `<h3>Nekoray - Windows | —Ç–æ–ª—å–∫–æ –±—Ä–∞—É–∑–µ—Ä –∏ discord</h3>
        <p>–ù–∞—Å—Ç—Ä–æ–π–∫–∞ VPN —Ç–æ–ª—å–∫–æ –¥–ª—è –±—Ä–∞—É–∑–µ—Ä–∞ –∏ Discord.</p>`,
      },
    ],
  },
  {
    id: 'locations',
    title: '–õ–æ–∫–∞—Ü–∏–∏ —Å–µ—Ä–≤–µ—Ä–æ–≤',
    content: `
      <h2>–ù–∞—à–∏ —Å–µ—Ä–≤–µ—Ä—ã</h2>
      <p>Pesherkino VPN –∏–º–µ–µ—Ç —Å–µ—Ä–≤–µ—Ä—ã –≤ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Å—Ç—Ä–∞–Ω–∞—Ö –¥–ª—è –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–π —Å–∫–æ—Ä–æ—Å—Ç–∏ –∏ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ä–∞–∑–ª–∏—á–Ω—ã–º —Ä–µ—Å—É—Ä—Å–∞–º.</p>
      <div class="locations-grid">
        <div class="location-card-wiki">
          <img src="/sweden.svg" alt="–®–≤–µ—Ü–∏—è" class="location-flag-wiki" />
          <h3>–°—Ç–æ–∫–≥–æ–ª—å–º, –®–≤–µ—Ü–∏—è</h3>
          <p>–û–ø—Ç–∏–º–∞–ª—å–Ω–æ –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –µ–≤—Ä–æ–ø–µ–π—Å–∫–∏–º —Å–µ—Ä–≤–∏—Å–∞–º: Spotify, IKEA, Klarna</p>
          <div class="ping-info">–°—Ä–µ–¥–Ω–∏–π –ø–∏–Ω–≥: 45-65ms</div>
        </div>
        <div class="location-card-wiki">
          <img src="/germany.svg" alt="–ì–µ—Ä–º–∞–Ω–∏—è" class="location-flag-wiki" />
          <h3>–§—Ä–∞–Ω–∫—Ñ—É—Ä—Ç, –ì–µ—Ä–º–∞–Ω–∏—è</h3>
          <p>–ò–¥–µ–∞–ª—å–Ω–æ –¥–ª—è Discord –∏ –Ω–µ–º–µ—Ü–∫–∏—Ö —Å–µ—Ä–≤–∏—Å–æ–≤: Deutsche Bank, Commerzbank</p>
          <div class="ping-info">–°—Ä–µ–¥–Ω–∏–π –ø–∏–Ω–≥: 35-55ms</div>
        </div>
        <div class="location-card-wiki">
          <img src="/netherlands.svg" alt="–ù–∏–¥–µ—Ä–ª–∞–Ω–¥—ã" class="location-flag-wiki" />
          <h3>–ê–º—Å—Ç–µ—Ä–¥–∞–º, –ù–∏–¥–µ—Ä–ª–∞–Ω–¥—ã</h3>
          <p>–û—Ç–ª–∏—á–Ω–æ –¥–ª—è –≥–æ–ª–ª–∞–Ω–¥—Å–∫–∏—Ö —Å–µ—Ä–≤–∏—Å–æ–≤: Philips, KLM, TomTom</p>
          <div class="ping-info">–°—Ä–µ–¥–Ω–∏–π –ø–∏–Ω–≥: 40-60ms</div>
        </div>
        <div class="location-card-wiki">
          <img src="/russia.svg" alt="–†–æ—Å—Å–∏—è" class="location-flag-wiki" />
          <h3>–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥, –†–æ—Å—Å–∏—è</h3>
          <p>–î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —Ä–æ—Å—Å–∏–π—Å–∫–∏–º —Å–µ—Ä–≤–∏—Å–∞–º: HeadHunter, Rutube, –¶–∏–∞–Ω</p>
          <div class="ping-info">–°—Ä–µ–¥–Ω–∏–π –ø–∏–Ω–≥: 15-35ms</div>
        </div>
      </div>
    `,
  },
  {
    id: 'faq-extended',
    title: '–ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã',
    content: `
      <h2>FAQ</h2>
      <div class="faq-item">
        <h3>üîí –ë–µ–∑–æ–ø–∞—Å–µ–Ω –ª–∏ Pesherkino VPN?</h3>
        <p>–î–∞, –Ω–∞—à —Å–µ—Ä–≤–∏—Å –ø–æ–ª–Ω–æ—Å—Ç—å—é –±–µ–∑–æ–ø–∞—Å–µ–Ω. –ú—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –ø—Ä–æ—Ç–æ–∫–æ–ª—ã —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è –∏ –Ω–µ –≤–µ–¥–µ–º –ª–æ–≥–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π. –í–µ—Å—å –∫–æ–¥ –æ—Ç–∫—Ä—ã—Ç –∏ –¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏.</p>
      </div>
      <div class="faq-item">
        <h3>‚ö° –ö–∞–∫–æ–≤–∞ —Å–∫–æ—Ä–æ—Å—Ç—å —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è?</h3>
        <p>–°–∫–æ—Ä–æ—Å—Ç—å –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞ –∏ –∫–∞—á–µ—Å—Ç–≤–∞ –≤–∞—à–µ–≥–æ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è. –í —Å—Ä–µ–¥–Ω–µ–º –ø–æ—Ç–µ—Ä–∏ —Å–∫–æ—Ä–æ—Å—Ç–∏ —Å–æ—Å—Ç–∞–≤–ª—è—é—Ç 5-15%.</p>
      </div>
      <div class="faq-item">
        <h3>üí¨ –ü–æ—á–µ–º—É Discord Fix –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π?</h3>
        <p>–ú—ã —Å—á–∏—Ç–∞–µ–º, —á—Ç–æ –¥–æ—Å—Ç—É–ø –∫ Discord –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Å–≤–æ–±–æ–¥–Ω—ã–º. Discord Fix ‚Äî —ç—Ç–æ –Ω–∞—à –≤–∫–ª–∞–¥ –≤ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ –≥–µ–π–º–µ—Ä–æ–≤ –∏ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤.</p>
      </div>
      <div class="faq-item">
        <h3>üõ°Ô∏è –ß—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç "Open Source"?</h3>
        <p>–í–µ—Å—å –∏—Å—Ö–æ–¥–Ω—ã–π –∫–æ–¥ –Ω–∞—à–µ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –æ—Ç–∫—Ä—ã—Ç –∏ –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ GitHub. –≠—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É—é –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏.</p>
      </div>
      <div class="faq-item">
        <h3>ü§ù –ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞?</h3>
        <p>–ó–∞ –∫–∞–∂–¥–æ–≥–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ 10% –æ—Ç —Å—É–º–º—ã –µ–≥–æ –ø–µ—Ä–≤–æ–≥–æ –ø–ª–∞—Ç–µ–∂–∞ –≤ –∫–∞—á–µ—Å—Ç–≤–µ –±–æ–Ω—É—Å–∞ –Ω–∞ –≤–∞—à —Å—á–µ—Ç.</p>
      </div>
      <div class="faq-item">
        <h3>üì± –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è –ª–∏ –º–æ–±–∏–ª—å–Ω—ã–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞?</h3>
        <p>–í –Ω–∞—Å—Ç–æ—è—â–µ–µ –≤—Ä–µ–º—è –º—ã –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º Windows –∏ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è –¥–ª—è –±—Ä–∞—É–∑–µ—Ä–æ–≤. –ú–æ–±–∏–ª—å–Ω—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ.</p>
      </div>
    `,
  },
  {
    id: 'troubleshooting',
    title: '–ü—Ä–æ–±–ª–µ–º—ã –∏ —Ä–µ—à–µ–Ω–∏—è',
    content: `
      <h2>–ü—Ä–æ–±–ª–µ–º—ã –∏ —Ä–µ—à–µ–Ω–∏—è</h2>
      <ul>
        <li><b>–û–±—â–∏–µ —Å–æ–≤–µ—Ç—ã:</b> –ß—Ç–æ –¥–µ–ª–∞—Ç—å, –µ—Å–ª–∏ –Ω–µ —É–¥–∞—ë—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∏–ª–∏ —Å–∫–æ—Ä–æ—Å—Ç—å –Ω–∏–∑–∫–∞—è.</li>
        <li><b>Discord –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç:</b> –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –≤—ã –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ Discord Fix –∏ –æ—Ç–∫–ª—é—á–∏–ª–∏ –¥—Ä—É–≥–∏–µ VPN.</li>
        <li><b>–ü—Ä–æ–±–ª–µ–º—ã —Å –æ–ø–ª–∞—Ç–æ–π:</b> –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–π —Å–ø–æ—Å–æ–± –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É.</li>
      </ul>
    `,
    subsections: [
      {
        id: 'troubleshooting-tips',
        title: '–û–±—â–∏–µ —Å–æ–≤–µ—Ç—ã',
        content: `
          <h3>–ß—Ç–æ –¥–µ–ª–∞—Ç—å, –µ—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã?</h3>
          <ul>
            <li>–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ.</li>
            <li>–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ.</li>
            <li>–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–π —Å–µ—Ä–≤–µ—Ä –∏–ª–∏ –ª–æ–∫–∞—Ü–∏—é.</li>
            <li>–û—Ç–∫–ª—é—á–∏—Ç–µ —Å—Ç–æ—Ä–æ–Ω–Ω–∏–µ VPN –∏ –ø—Ä–æ–∫—Å–∏.</li>
            <li>–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É —á–µ—Ä–µ–∑ Telegram-–±–æ—Ç–∞.</li>
          </ul>
        `,
      },
    ],
  },
  {
    id: 'useful',
    title: '–ü–æ–ª–µ–∑–Ω–æ–µ',
    content: `
      <h2>–ü–æ–ª–µ–∑–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã</h2>
      <ul>
        <li><b>–í—ã–±–æ—Ä –∫–ª–∏–µ–Ω—Ç–∞:</b> –ö–∞–∫–æ–π VPN-–∫–ª–∏–µ–Ω—Ç –≤—ã–±—Ä–∞—Ç—å –¥–ª—è –≤–∞—à–µ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã.</li>
        <li><b>–°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Ç–∞—Ä–∏—Ñ–æ–≤:</b> –ö–∞–∫–æ–π —Ç–∞—Ä–∏—Ñ –ø–æ–¥–æ–π–¥—ë—Ç –∏–º–µ–Ω–Ω–æ –≤–∞–º.</li>
        <li><b>–°—Å—ã–ª–∫–∏ –Ω–∞ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–µ —Ä–µ—Å—É—Ä—Å—ã –∏ —á–∞—Ç—ã.</b></li>
      </ul>
    `,
    subsections: [
      {
        id: 'choose-client',
        title: '–í—ã–±–æ—Ä –∫–ª–∏–µ–Ω—Ç–∞',
        content: `
          <h3>–ö–∞–∫ –≤—ã–±—Ä–∞—Ç—å VPN-–∫–ª–∏–µ–Ω—Ç?</h3>
          <ul>
            <li>–î–ª—è Windows –∏ Android —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º Hiddify.</li>
            <li>–î–ª—è MacOS ‚Äî Hiddify –∏–ª–∏ Streisand.</li>
            <li>–î–ª—è iOS ‚Äî Streisand.</li>
            <li>–î–ª—è Linux ‚Äî –ª—é–±–æ–π –∫–ª–∏–µ–Ω—Ç —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π VLESS/VMess.</li>
          </ul>
        `,
      },
    ],
  },
];

function WikiPage() {
  const [selectedSection, setSelectedSection] = useState<string>('getting-started');
  const [searchQuery, setSearchQuery] = useState<string>('');
  const [isSidebarOpen, setIsSidebarOpen] = useState<boolean>(true);
  const [searchResults, setSearchResults] = useState<SearchResult[]>([]);
  const [showSearchResults, setShowSearchResults] = useState<boolean>(false);
  const [selectedResultIndex, setSelectedResultIndex] = useState<number>(-1);
  const searchRef = useRef<HTMLDivElement>(null);
  const navigate = useNavigate();
  const [isSearchModal, setIsSearchModal] = useState(false);
  const [isMobileSidebar, setIsMobileSidebar] = useState(false);

  const currentSection = wikiData.find((section) => section.id === selectedSection) || wikiData[0];

  // –§—É–Ω–∫—Ü–∏—è –ø–æ–∏—Å–∫–∞ –≤ —Å—Ç–∏–ª–µ GitBook
  const performSearch = (query: string): SearchResult[] => {
    if (!query.trim()) return [];

    const results: SearchResult[] = [];
    const lowerQuery = query.toLowerCase();

    wikiData.forEach((section) => {
      // –ü–æ–∏—Å–∫ –≤ –∑–∞–≥–æ–ª–æ–≤–∫–µ —Ä–∞–∑–¥–µ–ª–∞
      if (section.title.toLowerCase().includes(lowerQuery)) {
        results.push({
          sectionId: section.id,
          sectionTitle: section.title,
          matchedText: section.title,
          context: section.title,
          type: 'section',
        });
      }

      // –ü–æ–∏—Å–∫ –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–∞—Ö
      if (section.subsections) {
        section.subsections.forEach((subsection) => {
          if (subsection.title.toLowerCase().includes(lowerQuery)) {
            results.push({
              sectionId: section.id,
              sectionTitle: section.title,
              subsectionId: subsection.id,
              subsectionTitle: subsection.title,
              matchedText: subsection.title,
              context: `${section.title} > ${subsection.title}`,
              type: 'subsection',
            });
          }

          // –ü–æ–∏—Å–∫ –≤ —Å–æ–¥–µ—Ä–∂–∏–º–æ–º –ø–æ–¥—Ä–∞–∑–¥–µ–ª–∞
          const contentMatch = findContentMatches(subsection.content, lowerQuery);
          contentMatch.forEach((match) => {
            results.push({
              sectionId: section.id,
              sectionTitle: section.title,
              subsectionId: subsection.id,
              subsectionTitle: subsection.title,
              matchedText: match.text,
              context: match.context,
              type: 'content',
            });
          });
        });
      }

      // –ü–æ–∏—Å–∫ –≤ —Å–æ–¥–µ—Ä–∂–∏–º–æ–º —Ä–∞–∑–¥–µ–ª–∞
      const contentMatch = findContentMatches(section.content, lowerQuery);
      contentMatch.forEach((match) => {
        results.push({
          sectionId: section.id,
          sectionTitle: section.title,
          matchedText: match.text,
          context: match.context,
          type: 'content',
        });
      });
    });

    return results.slice(0, 10); // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º 10 —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏
  };

  // –§—É–Ω–∫—Ü–∏—è –ø–æ–∏—Å–∫–∞ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π –≤ HTML-–∫–æ–Ω—Ç–µ–Ω—Ç–µ
  const findContentMatches = (
    htmlContent: string,
    query: string,
  ): Array<{ text: string; context: string }> => {
    const matches: Array<{ text: string; context: string }> = [];

    // –£–±–∏—Ä–∞–µ–º HTML-—Ç–µ–≥–∏ –¥–ª—è –ø–æ–∏—Å–∫–∞
    const textContent = htmlContent.replace(/<[^>]*>/g, ' ');
    const sentences = textContent.split(/[.!?]+/).filter((s) => s.trim().length > 0);

    sentences.forEach((sentence) => {
      const lowerSentence = sentence.toLowerCase();
      if (lowerSentence.includes(query)) {
        const startIndex = lowerSentence.indexOf(query);
        const endIndex = startIndex + query.length;

        // –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –≤–æ–∫—Ä—É–≥ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è
        const contextStart = Math.max(0, startIndex - 50);
        const contextEnd = Math.min(sentence.length, endIndex + 50);
        let context = sentence.substring(contextStart, contextEnd);

        // –î–æ–±–∞–≤–ª—è–µ–º –º–Ω–æ–≥–æ—Ç–æ—á–∏–µ –µ—Å–ª–∏ –æ–±—Ä–µ–∑–∞–ª–∏
        if (contextStart > 0) context = '...' + context;
        if (contextEnd < sentence.length) context = context + '...';

        // –í—ã–¥–µ–ª—è–µ–º —Å–æ–≤–ø–∞–¥–∞—é—â–∏–π —Ç–µ–∫—Å—Ç
        const matchStart = startIndex - contextStart;
        const matchEnd = endIndex - contextStart;
        const matchedText = context.substring(matchStart, matchEnd);

        matches.push({
          text: matchedText,
          context: context,
        });
      }
    });

    return matches;
  };

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π –ø–æ–∏—Å–∫–∞
  useEffect(() => {
    if (searchQuery.trim()) {
      const results = performSearch(searchQuery);
      setSearchResults(results);
      setShowSearchResults(true);
      setSelectedResultIndex(-1);
    } else {
      setSearchResults([]);
      setShowSearchResults(false);
    }
  }, [searchQuery]);

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∏–∫–∞ –≤–Ω–µ –ø–æ–∏—Å–∫–∞
  useEffect(() => {
    const handleClickOutside = (event: MouseEvent) => {
      if (searchRef.current && !searchRef.current.contains(event.target as Node)) {
        setShowSearchResults(false);
      }
    };

    document.addEventListener('mousedown', handleClickOutside);
    return () => document.removeEventListener('mousedown', handleClickOutside);
  }, []);

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –ø–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º
  const handleKeyDown = (e: React.KeyboardEvent) => {
    if (!showSearchResults || searchResults.length === 0) return;

    switch (e.key) {
      case 'ArrowDown':
        e.preventDefault();
        setSelectedResultIndex((prev) => (prev < searchResults.length - 1 ? prev + 1 : 0));
        break;
      case 'ArrowUp':
        e.preventDefault();
        setSelectedResultIndex((prev) => (prev > 0 ? prev - 1 : searchResults.length - 1));
        break;
      case 'Enter':
        e.preventDefault();
        if (selectedResultIndex >= 0 && selectedResultIndex < searchResults.length) {
          handleResultClick(searchResults[selectedResultIndex]);
        }
        break;
      case 'Escape':
        setShowSearchResults(false);
        setSearchQuery('');
        break;
    }
  };

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∏–∫–∞ –ø–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É –ø–æ–∏—Å–∫–∞
  const handleResultClick = (result: SearchResult) => {
    setSelectedSection(result.sectionId);
    setSearchQuery('');
    setShowSearchResults(false);

    // –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º –∫ –ø–æ–¥—Ä–∞–∑–¥–µ–ª—É –µ—Å–ª–∏ –µ—Å—Ç—å
    if (result.subsectionId) {
      setTimeout(() => {
        const element = document.getElementById(result.subsectionId!);
        if (element) {
          element.scrollIntoView({ behavior: 'smooth', block: 'start' });
        }
      }, 100);
    }
  };

  // –ü–æ–¥—Å–≤–µ—Ç–∫–∞ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π –≤ —Ç–µ–∫—Å—Ç–µ
  const highlightMatches = (text: string, query: string) => {
    if (!query.trim()) return text;
    const regex = new RegExp(`(${query.replace(/[.*+?^${}()|[\]\\]/g, '\\$&')})`, 'gi');
    const parts = text.split(regex);
    return parts.map((part, index) =>
      regex.test(part) ? (
        <mark
          key={index}
          style={{
            background: '#3b82f6',
            color: '#fff',
            borderRadius: '4px',
            padding: '0 5px',
            fontWeight: 500,
            boxShadow: 'none',
          }}>
          {part}
        </mark>
      ) : (
        part
      ),
    );
  };

  const handleSectionClick = (sectionId: string) => {
    setSelectedSection(sectionId);
    if (window.innerWidth < 768) {
      setIsSidebarOpen(false);
    }
  };

  const handleSubsectionClick = (sectionId: string, subsectionId: string) => {
    setSelectedSection(sectionId);
    setTimeout(() => {
      const element = document.getElementById(subsectionId);
      if (element) {
        element.scrollIntoView({ behavior: 'smooth' });
      }
    }, 100);
  };

  // –û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞
  const openSearchModal = () => {
    setIsSearchModal(true);
    setShowSearchResults(true);
    setTimeout(() => {
      const input = document.getElementById('wiki-search-input');
      if (input) (input as HTMLInputElement).focus();
    }, 50);
  };
  // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞
  const closeSearchModal = () => {
    setIsSearchModal(false);
    setShowSearchResults(false);
    setSearchQuery('');
  };

  // Escape –∑–∞–∫—Ä—ã–≤–∞–µ—Ç –º–æ–¥–∞–ª–∫—É
  useEffect(() => {
    if (!isSearchModal) return;
    const handler = (e: KeyboardEvent) => {
      if (e.key === 'Escape') closeSearchModal();
    };
    document.addEventListener('keydown', handler);
    return () => document.removeEventListener('keydown', handler);
  }, [isSearchModal]);

  // –ö–ª–∏–∫ –≤–Ω–µ –∫–∞—Ä—Ç–æ—á–∫–∏ ‚Äî –∑–∞–∫—Ä—ã—Ç—å
  const modalRef = useRef<HTMLDivElement>(null);
  useEffect(() => {
    if (!isSearchModal) return;
    const handler = (e: MouseEvent) => {
      if (modalRef.current && !modalRef.current.contains(e.target as Node)) {
        closeSearchModal();
      }
    };
    document.addEventListener('mousedown', handler);
    return () => document.removeEventListener('mousedown', handler);
  }, [isSearchModal]);

  // –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ —Å–∫—Ä–æ–ª–ª–∞ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–æ–º –º–æ–±–∏–ª—å–Ω–æ–º –º–µ–Ω—é
  useEffect(() => {
    if (isMobileSidebar) {
      document.body.style.overflow = 'hidden';
    } else {
      document.body.style.overflow = '';
    }
    return () => {
      document.body.style.overflow = '';
    };
  }, [isMobileSidebar]);

  // –ö–ª–∏–∫ –≤–Ω–µ –º–µ–Ω—é ‚Äî –∑–∞–∫—Ä—ã—Ç—å
  const mobileSidebarRef = useRef<HTMLDivElement>(null);
  useEffect(() => {
    if (!isMobileSidebar) return;
    const handler = (e: MouseEvent) => {
      if (mobileSidebarRef.current && !mobileSidebarRef.current.contains(e.target as Node)) {
        setIsMobileSidebar(false);
      }
    };
    document.addEventListener('mousedown', handler);
    return () => document.removeEventListener('mousedown', handler);
  }, [isMobileSidebar]);

  // –ì–ª–æ–±–∞–ª—å–Ω—ã–π —Ö–æ—Ç–∫–µ–π Ctrl+Shift+K (–∏–ª–∏ Cmd+Shift+K –¥–ª—è Mac) –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –ø–æ–∏—Å–∫–∞
  useEffect(() => {
    const handler = (e: KeyboardEvent) => {
      if (e.defaultPrevented) return;
      const active = document.activeElement;
      const isInput =
        active &&
        ((active.tagName === 'INPUT' &&
          (active as HTMLInputElement).type !== 'checkbox' &&
          (active as HTMLInputElement).type !== 'radio') ||
          active.tagName === 'TEXTAREA' ||
          (active as HTMLElement).isContentEditable);
      if (!isInput && (e.ctrlKey || e.metaKey) && e.shiftKey && e.key.toLowerCase() === 'k') {
        e.preventDefault();
        openSearchModal();
      }
    };
    document.addEventListener('keydown', handler, true); // capture phase
    return () => document.removeEventListener('keydown', handler, true);
  }, []);

  return (
    <div className="wiki-container">
      {/* Header */}
      <motion.header
        className="wiki-header"
        initial={{ opacity: 0, y: -20 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ duration: 0.5 }}>
        <div className="wiki-header-content">
          {/* –ì–∞–º–±—É—Ä–≥–µ—Ä –¥–ª—è –º–æ–±–∏–ª—å–Ω–æ–≥–æ */}
          <button
            className="sidebar-toggle"
            onClick={() => setIsMobileSidebar(true)}
            title="sidebar"
            style={{ display: 'none' }}>
            <svg
              width="28"
              height="28"
              viewBox="0 0 24 24"
              fill="none"
              stroke="currentColor"
              strokeWidth="2">
              <line x1="3" y1="6" x2="21" y2="6"></line>
              <line x1="3" y1="12" x2="21" y2="12"></line>
              <line x1="3" y1="18" x2="21" y2="18"></line>
            </svg>
          </button>

          <div className="wiki-title">
            <h1>
              <span
                style={{
                  fontSize: '1.8rem',
                  background: 'none',
                  WebkitBackgroundClip: 'initial',
                  WebkitTextFillColor: 'initial',
                  backgroundClip: 'initial',
                  color: 'inherit',
                }}>
                üìö
              </span>{' '}
              <span
                style={{
                  background: 'linear-gradient(135deg, #3b82f6, #8b5cf6)',
                  WebkitBackgroundClip: 'text',
                  WebkitTextFillColor: 'transparent',
                  backgroundClip: 'text',
                }}>
                Pesherkino Wiki
              </span>
            </h1>
            <p>–ü–æ–ª–Ω–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é</p>
          </div>

          {/* –ü–æ–∏—Å–∫ –≤ header –¥–ª—è –ü–ö (—Ç–æ–ª—å–∫–æ —Å–ø—Ä–∞–≤–∞ –æ—Ç –ª–æ–≥–æ) */}
          <div className="header-search-desktop">
            <div className="search-input-wrapper" style={{ position: 'relative' }}>
              <svg
                className="search-icon"
                width="18"
                height="18"
                viewBox="0 0 24 24"
                fill="none"
                stroke="currentColor"
                strokeWidth="2"
                style={{
                  left: 14,
                  top: '50%',
                  transform: 'translateY(-50%)',
                  position: 'absolute',
                  zIndex: 2,
                }}>
                <circle cx="11" cy="11" r="8"></circle>
                <path d="m21 21-4.35-4.35"></path>
              </svg>
              <input
                type="text"
                className="search-input"
                placeholder="–ü–æ–∏—Å–∫ –ø–æ Wiki..."
                onFocus={openSearchModal}
                readOnly
                style={{
                  cursor: 'pointer',
                  background: 'rgba(30,41,59,0.7)',
                  paddingLeft: 44,
                  paddingRight: 80,
                  minWidth: 220,
                }}
              />
              <span className="search-hotkey-hint">
                {navigator.platform.includes('Mac') ? '‚åò' : 'Ctrl'}+Shift+K
              </span>
            </div>
          </div>

          <motion.button
            className="back-button"
            onClick={() => navigate('/')}
            whileHover={{ scale: 1.05 }}
            whileTap={{ scale: 0.95 }}>
            <svg
              width="20"
              height="20"
              viewBox="0 0 24 24"
              fill="none"
              stroke="currentColor"
              strokeWidth="2">
              <path d="M19 12H5M12 19l-7-7 7-7" />
            </svg>
            –ù–∞ –≥–ª–∞–≤–Ω—É—é
          </motion.button>
        </div>
      </motion.header>

      {/* –ú–æ–¥–∞–ª—å–Ω—ã–π –ø–æ–∏—Å–∫ GitBook-—Å—Ç–∏–ª—è */}
      <AnimatePresence>
        {isSearchModal && (
          <motion.div
            className="search-modal-overlay"
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
            exit={{ opacity: 0 }}>
            <motion.div
              className="search-modal-card"
              ref={modalRef}
              initial={{ y: -30, opacity: 0 }}
              animate={{ y: 0, opacity: 1 }}
              exit={{ y: -30, opacity: 0 }}
              transition={{ duration: 0.18 }}>
              <div className="search-modal-header">
                <div
                  className="search-input-wrapper"
                  style={{ position: 'relative', width: '100%' }}>
                  <svg
                    className="search-icon"
                    width="20"
                    height="20"
                    viewBox="0 0 24 24"
                    fill="none"
                    stroke="currentColor"
                    strokeWidth="2"
                    style={{
                      position: 'absolute',
                      left: 14,
                      top: '50%',
                      transform: 'translateY(-50%)',
                      zIndex: 2,
                    }}>
                    <circle cx="11" cy="11" r="8"></circle>
                    <path d="m21 21-4.35-4.35"></path>
                  </svg>
                  <input
                    id="wiki-search-input"
                    type="text"
                    className="search-input"
                    placeholder="–ü–æ–∏—Å–∫ –ø–æ Wiki... (Ctrl+Shift+K)"
                    value={searchQuery}
                    onChange={(e) => setSearchQuery(e.target.value)}
                    onKeyDown={handleKeyDown}
                    autoComplete="off"
                    style={{ paddingLeft: 44, paddingRight: 44 }}
                  />
                  {searchQuery && (
                    <button
                      className="search-clear"
                      onClick={() => {
                        setSearchQuery('');
                        setShowSearchResults(false);
                      }}
                      style={{
                        position: 'absolute',
                        right: 14,
                        top: '50%',
                        transform: 'translateY(-50%)',
                        zIndex: 2,
                      }}>
                      ‚úï
                    </button>
                  )}
                </div>
              </div>
              <div className="search-modal-results">
                {searchQuery && searchResults.length === 0 && (
                  <div className="search-modal-noresults">
                    –ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –ø–æ –∑–∞–ø—Ä–æ—Å—É "{searchQuery}"
                  </div>
                )}
                {searchResults.map((result, index) => (
                  <motion.div
                    key={`${result.sectionId}-${result.subsectionId || 'main'}-${index}`}
                    className={`search-result-item${
                      index === selectedResultIndex ? ' selected' : ''
                    }`}
                    onClick={() => handleResultClick(result)}
                    whileHover={{ backgroundColor: 'rgba(59,130,246,0.07)' }}>
                    <div className="search-section-title">{result.sectionTitle}</div>
                    {result.type !== 'section' && (
                      <div className="search-subtitle">
                        {result.type === 'subsection'
                          ? result.subsectionTitle
                          : result.context.split('>')[1]?.trim()}
                      </div>
                    )}
                    <div className="search-context">
                      {highlightMatches(result.context, searchQuery)}
                    </div>
                  </motion.div>
                ))}
              </div>
            </motion.div>
          </motion.div>
        )}
      </AnimatePresence>

      {/* –ú–æ–±–∏–ª—å–Ω–æ–µ –º–µ–Ω—é */}
      <AnimatePresence>
        {isMobileSidebar && (
          <motion.div
            className="mobile-sidebar-overlay"
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
            exit={{ opacity: 0 }}>
            <motion.aside
              className="mobile-sidebar"
              ref={mobileSidebarRef}
              initial={{ x: -320 }}
              animate={{ x: 0 }}
              exit={{ x: -320 }}
              transition={{ duration: 0.22 }}>
              <button
                className="mobile-sidebar-close"
                onClick={() => setIsMobileSidebar(false)}
                title="–ó–∞–∫—Ä—ã—Ç—å –º–µ–Ω—é">
                <svg
                  width="28"
                  height="28"
                  viewBox="0 0 24 24"
                  fill="none"
                  stroke="currentColor"
                  strokeWidth="2">
                  <line x1="18" y1="6" x2="6" y2="18"></line>
                  <line x1="6" y1="6" x2="18" y2="18"></line>
                </svg>
              </button>
              <div className="sidebar-content">
                <div className="search-container">
                  <div className="search-input-wrapper" style={{ position: 'relative' }}>
                    <svg
                      className="search-icon"
                      width="20"
                      height="20"
                      viewBox="0 0 24 24"
                      fill="none"
                      stroke="currentColor"
                      strokeWidth="2">
                      <circle cx="11" cy="11" r="8"></circle>
                      <path d="m21 21-4.35-4.35"></path>
                    </svg>
                    <input
                      type="text"
                      className="search-input"
                      placeholder="–ü–æ–∏—Å–∫ –ø–æ Wiki..."
                      onFocus={openSearchModal}
                      readOnly
                      style={{
                        cursor: 'pointer',
                        background: 'rgba(30,41,59,0.7)',
                        paddingRight: 80,
                      }}
                    />
                    <span className="search-hotkey-hint">
                      {navigator.platform.includes('Mac') ? '‚åò' : 'Ctrl'}+Shift+K
                    </span>
                  </div>
                </div>
                <nav className="wiki-navigation">
                  <ul className="nav-list">
                    {wikiData.map((section) => (
                      <li key={section.id} className="nav-item">
                        <button
                          className={`nav-link ${selectedSection === section.id ? 'active' : ''}`}
                          onClick={() => {
                            setSelectedSection(section.id);
                            setIsMobileSidebar(false);
                          }}>
                          <span className="nav-link-text">{section.title}</span>
                        </button>
                        {section.subsections && (
                          <ul className="subnav-list">
                            {section.subsections.map((subsection) => (
                              <li key={subsection.id} className="subnav-item">
                                <button
                                  className="subnav-link"
                                  onClick={() => {
                                    setSelectedSection(section.id);
                                    setTimeout(() => {
                                      const el = document.getElementById(subsection.id);
                                      if (el) el.scrollIntoView({ behavior: 'smooth' });
                                    }, 100);
                                    setIsMobileSidebar(false);
                                  }}>
                                  {subsection.title}
                                </button>
                              </li>
                            ))}
                          </ul>
                        )}
                      </li>
                    ))}
                  </ul>
                </nav>
              </div>
            </motion.aside>
          </motion.div>
        )}
      </AnimatePresence>

      <div className="wiki-content-wrapper">
        {/* Sidebar –¥–ª—è desktop */}
        <AnimatePresence>
          {isSidebarOpen && !isSearchModal && (
            <motion.aside
              className="wiki-sidebar"
              initial={{ x: -300, opacity: 0 }}
              animate={{ x: 0, opacity: 1 }}
              exit={{ x: -300, opacity: 0 }}
              transition={{ duration: 0.3 }}>
              <div className="sidebar-content">
                {/* –ù–∞–≤–∏–≥–∞—Ü–∏—è */}
                <nav className="wiki-navigation">
                  <ul className="nav-list">
                    {wikiData.map((section) => (
                      <li key={section.id} className="nav-item">
                        <button
                          className={`nav-link ${selectedSection === section.id ? 'active' : ''}`}
                          onClick={() => handleSectionClick(section.id)}>
                          <span className="nav-link-text">{section.title}</span>
                        </button>
                        {section.subsections && (
                          <ul className="subnav-list">
                            {section.subsections.map((subsection) => (
                              <li key={subsection.id} className="subnav-item">
                                <button
                                  className="subnav-link"
                                  onClick={() => handleSubsectionClick(section.id, subsection.id)}>
                                  {subsection.title}
                                </button>
                              </li>
                            ))}
                          </ul>
                        )}
                      </li>
                    ))}
                  </ul>
                </nav>
              </div>
            </motion.aside>
          )}
        </AnimatePresence>

        {/* Main Content */}
        <main className="wiki-main">
          <motion.div
            className="wiki-content"
            key={selectedSection}
            initial={{ opacity: 0, x: 20 }}
            animate={{ opacity: 1, x: 0 }}
            transition={{ duration: 0.3 }}>
            <div
              className="content-html"
              dangerouslySetInnerHTML={{ __html: currentSection.content }}
            />

            {currentSection.subsections && (
              <div className="subsections">
                {currentSection.subsections.map((subsection) => (
                  <div key={subsection.id} id={subsection.id} className="subsection">
                    <div
                      className="content-html"
                      dangerouslySetInnerHTML={{ __html: subsection.content }}
                    />
                  </div>
                ))}
              </div>
            )}
          </motion.div>
        </main>
      </div>
    </div>
  );
}

export default WikiPage;
